openapi: 3.0.0
info:
  title: Sharethebread
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.0
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /events:
    get:
      summary: Devuelve los eventos
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
                  example: {}
  /events/reserved:
    get:
      summary: Devuelve los eventos reservados por el comensal
      responses:
        '200':
          description: A JSON array of events
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  example: {}
  /events/{eventId}:
    get:
      summary: Devuelve un evento
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event id.
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: A JSON object of event
          content:
            application/json:
              schema: 
                type: object
                example: {}
  /reservations:
    post:
      summary: Make a reservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: integer
                  example: 8
      responses:
        '201':
          description: A JSON object of Reservation
          content:
            application/json:
              schema: 
                type: object
                example: {
                  id: 1
                }
  /reservations/{reservationId}:
    delete:
      summary: Cancel a reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          description: Reservation id.
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: The resource was deleted successfully.

#----------------------------------------------------------------------------#
# KITCHEN
#----------------------------------------------------------------------------#
  /kitchen/events:
    get:
      summary: Devuelve los eventos del cocinero
      tags:
        - kitchen
      responses:
        '200':
          description: A JSON array of events
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
                  example: {}
    post:
      summary: Create a Event
      tags:
        - kitchen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: A JSON object of Event
          content:
            application/json:
              schema: 
                type: object
                example: {
                  id: 1
                }
    put:
      summary: Update a Event
      tags:
        - kitchen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: A JSON object of Event updated
          content:
            application/json:
              schema: 
                type: object
                example: {
                  id: 1
                }
  /kitchen/events/{eventId}:
    delete:
      summary: Delete a event
      tags:
        - kitchen
      parameters:
        - name: eventId
          in: path
          required: true
          description: Reservation id.
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: The resource was deleted successfully.

  /kitchen/events/reserved:
    get:
      summary: Devuelve los eventos del cocinero reservados por clientes
      tags:
        - kitchen
      responses:
        '200':
          description: A JSON array of events
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string
                  example: {}

  # Published Events
  /kithcen/events/published-events:
    post:
      summary: Publish a event
      tags:
        - kitchen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: integer
                  example: 8
      responses:
        '201':
          description: A JSON object of  published event
          content:
            application/json:
              schema: 
                type: object
                example: {
                  id: 1
                }
  # Published Events
  /kitchen/events/unpublished-events:
    post:
      summary: Unpublish a event
      tags:
        - kitchen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: integer
                  example: 8
      responses:
        '201':
          description: A JSON object of unpublished event
          content:
            application/json:
              schema: 
                type: object
                example: {
                  id: 1
                }

  # Reservations
  /kitchen/reservations/{reservationId}:
    delete:
      summary: Reject a reservation
      tags:
        - kitchen
      parameters:
        - name: reservationId
          in: path
          required: true
          description: Reservation id.
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: The resource was deleted successfully.

  /kithcen/approved-reservations:
    post:
      summary: Approve a reservation
      tags:
        - kitchen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reservation_id:
                  type: integer
                  example: 8
      responses:
        '201':
          description: A JSON object of  approved reservation
          content:
            application/json:
              schema: 
                type: object
                example: {
                  id: 1
                }

  # Event Images


